(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.3' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    387563,       6972]
NotebookOptionsPosition[    385934,       6941]
NotebookOutlinePosition[    386289,       6957]
CellTagsIndexPosition[    386246,       6954]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData[
 RowBox[{
  RowBox[{"net1", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<Neural Networks/\>\"", ",", 
      "\"\<trainedimageidentifyNetv2.wlnet\>\""}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.740155876483314*^9, 3.7401558989526176`*^9}, {
   3.740156053675375*^9, 3.7401560830794992`*^9}, {3.740292769382271*^9, 
   3.7402927754405413`*^9}, 3.740292816428556*^9, {3.740292892239078*^9, 
   3.7402929001938963`*^9}, 3.740408115301817*^9},
 CellLabel->"In[23]:=",ExpressionUUID->"3bddd08f-d8e3-47fb-9de7-9ef822f5fff5"],

Cell[BoxData[
 RowBox[{
  RowBox[{"net2", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<Neural Networks/\>\"", ",", 
      "\"\<trainedinceptionNetv2.wlnet\>\""}], "]"}], "]"}]}], ";"}]], "Input",\

 CellChangeTimes->{{3.7401768277840033`*^9, 3.740176855018613*^9}, {
   3.740187036144403*^9, 3.740187036207402*^9}, {3.74034022460255*^9, 
   3.740340227416615*^9}, 3.7404081159781237`*^9},
 CellLabel->"In[24]:=",ExpressionUUID->"c8aa61c2-ea39-44d2-822d-ecfe7e53aa9d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"net3", " ", "=", "  ", 
  RowBox[{"Import", "[", 
   RowBox[{"StringJoin", "[", 
    RowBox[{
     RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<Neural Networks/\>\"",
      ",", "\"\<trainedademNetv2.wlnet\>\""}], "]"}], "]"}]}]], "Input",
 CellChangeTimes->{{3.740218395441493*^9, 3.7402184075113688`*^9}, 
   3.7403402362962418`*^9, 3.740408116670033*^9, 3.7404151012728043`*^9},
 CellLabel->"In[57]:=",ExpressionUUID->"bd3016dc-ee64-4c02-b5fa-cbc0dba5a722"],

Cell[BoxData[
 TagBox[
  TemplateBox[{RowBox[{
      StyleBox[
       TagBox["NetChain", "SummaryHead"], "NonInterpretableSummary"], 
      StyleBox["[", "NonInterpretableSummary"], 
      DynamicModuleBox[{Typeset`open = True}, 
       PanelBox[
        PaneSelectorBox[{False -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquarePlusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = True), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Input\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"image\"", "SummaryItem"]}, {
                 StyleBox[
                  TemplateBox[{
                    TemplateBox[{
                    StyleBox["\"Output\"", 
                    GrayLevel[0], StripOnInput -> False], "\" \"", 
                    "\"port\""}, "RowDefault"], "\":\""}, "RowDefault"], 
                  "SummaryItemAnnotation"], 
                 StyleBox["\"class\"", "SummaryItem"]}, {
                 StyleBox[
                  
                  TemplateBox[{"\"Number of layers\"", "\":\""}, 
                   "RowDefault"], "SummaryItemAnnotation"], 
                 StyleBox["4", "SummaryItem"]}}, BaselinePosition -> {2, 1}, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 3}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}], True -> GridBox[{{
              PaneBox[
               ButtonBox[
                DynamicBox[
                 FEPrivate`FrontEndResource[
                 "FEBitmaps", "SquareMinusIconMedium"], 
                 ImageSizeCache -> {12., {0., 12.}}], Appearance -> None, 
                ButtonFunction :> (Typeset`open = False), Evaluator -> 
                Automatic, Method -> "Preemptive"], 
               Alignment -> {Center, Center}, ImageSize -> {Automatic, 24}], 
              GraphicsBox[{
                Thickness[0.014925373134328358`], {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{23., 91.5}, {30., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 RGBColor[0.729, 0.729, 0.729], 
                 Thickness[0.018686567164179105`], 
                 Opacity[1.], 
                 JoinForm[{"Miter", 10.}], 
                 
                 JoinedCurveBox[{{{0, 2, 0}}}, {{{37., 91.5}, {44., 91.5}}}, 
                  CurveClosed -> {0}]}, {
                 FaceForm[{
                   RGBColor[0.631, 0.8160000000000001, 0.498], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{15.5, 
                  103.5}, {23.5, 103.5}, {23.5, 79.5}, {15.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.40800000000000003`, 0.627, 0.196], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{24., 104.}, {15., 104.}, {
                  15., 79.}, {24., 79.}}, {{23., 80.}, {16., 80.}, {16., 
                  103.}, {23., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.38, 0.753, 0.89], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{29.5, 
                  103.5}, {37.5, 103.5}, {37.5, 79.5}, {29.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.24300000000000002`, 0.608, 0.71], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{38., 104.}, {29., 104.}, {
                  29., 79.}, {38., 79.}}, {{37., 80.}, {30., 80.}, {30., 
                  103.}, {37., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.584, 0.51, 0.8390000000000001], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{43.5, 
                  103.5}, {51.5, 103.5}, {51.5, 79.5}, {43.5, 79.5}}}]}, {
                 FaceForm[{
                   RGBColor[0.4, 0.396, 0.659], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}, {{0, 2, 
                  0}, {0, 1, 0}, {0, 1, 0}}}, {{{52., 104.}, {43., 104.}, {
                  43., 79.}, {52., 79.}}, {{51., 80.}, {44., 80.}, {44., 
                  103.}, {51., 103.}}}]}, {
                 FaceForm[{
                   RGBColor[0.549, 0.549, 0.549], 
                   Opacity[1.]}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{28., 91.5}, {25.,
                   95.}, {25., 88.}}}], 
                 
                 FilledCurveBox[{{{0, 2, 0}, {0, 1, 0}}}, {{{42., 91.5}, {39.,
                   95.}, {39., 88.}}}]}}, ImageMargins -> 0, 
               ImageSize -> {36, Automatic}, PlotRangePadding -> 0], 
              GridBox[{{
                 
                 DynamicModuleBox[{
                  NeuralNetworks`Private`NetChain`assoc3 = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "augLayer" -> 
                    Association[
                    "Type" -> "ImageAugmentation", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {320, 320}, 
                    "ReflectionProbabilities" -> {0.5, 0.5}, "$Channels" -> 3,
                     "$InputDimensions" -> {320, 320}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 320, 320}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{3, 320, 320}, 
                    NeuralNetworks`RealT]]], "pretrainednet" -> 
                    Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{64, 3, 
                    3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 3, "$GroupNumber" -> 1, 
                    "$InputSize" -> {320, 320}, "$OutputSize" -> {320, 320}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{3, 320, 320}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 320, 320}, 
                    NeuralNetworks`RealT]]], "pool1" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 64, 
                    "$InputSize" -> {320, 320}, "$OutputSize" -> {160, 160}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 320, 320}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 160, 160}, 
                    NeuralNetworks`RealT]]], "2a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association["Momentum" -> 0.9, "Epsilon" -> 0.00001001, 
                    "Channels" -> 64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {160, 160}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 160, 160}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{64, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{64, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {160, 160}, 
                    "$OutputSize" -> {160, 160}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 64, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 64, 
                    "$GroupNumber" -> 1, "$InputSize" -> {160, 160}, 
                    "$OutputSize" -> {160, 160}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "bn2a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {160, 160}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 160, 160}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "$GroupNumber" -> 1, "$InputSize" -> {160, 160}, 
                    "$OutputSize" -> {160, 160}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "_plus2a" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus2a", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus2a", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus2a", "Outputs", "Output"]}], "2b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {160, 160}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 160, 160}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "$GroupNumber" -> 1, "$InputSize" -> {160, 160}, 
                    "$OutputSize" -> {160, 160}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "bn2b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {160, 160}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 160, 160}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "$GroupNumber" -> 1, "$InputSize" -> {160, 160}, 
                    "$OutputSize" -> {160, 160}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "_plus2b1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus2b1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus2b1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus2b1", "Outputs", "Output"]}], "2b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {160, 160}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 160, 160}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "$GroupNumber" -> 1, "$InputSize" -> {160, 160}, 
                    "$OutputSize" -> {160, 160}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "bn2b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {160, 160}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 160, 160}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{128, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 128, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "$GroupNumber" -> 1, "$InputSize" -> {160, 160}, 
                    "$OutputSize" -> {160, 160}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "_plus2b2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus2b2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus2b2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus2b2", "Outputs", "Output"]}], "pool2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 128, 
                    "$InputSize" -> {160, 160}, "$OutputSize" -> {80, 80}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 80, 80}, 
                    NeuralNetworks`RealT]]], "3a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {80, 80}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 80, 80}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{128, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{128, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "$GroupNumber" -> 1, "$InputSize" -> {80, 80}, 
                    "$OutputSize" -> {80, 80}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 128, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 128, 
                    "$GroupNumber" -> 1, "$InputSize" -> {80, 80}, 
                    "$OutputSize" -> {80, 80}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "bn3a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {80, 80}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 80, 80}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "$GroupNumber" -> 1, "$InputSize" -> {80, 80}, 
                    "$OutputSize" -> {80, 80}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "_plus3a" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus3a", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus3a", "Inputs", "2"]
                     -> NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus3a", "Outputs", "Output"]}], "3b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {80, 80}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 80, 80}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "$GroupNumber" -> 1, "$InputSize" -> {80, 80}, 
                    "$OutputSize" -> {80, 80}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "bn3b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {80, 80}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 80, 80}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "$GroupNumber" -> 1, "$InputSize" -> {80, 80}, 
                    "$OutputSize" -> {80, 80}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "_plus3b1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus3b1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus3b1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus3b1", "Outputs", "Output"]}], "3b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {80, 80}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 80, 80}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "$GroupNumber" -> 1, "$InputSize" -> {80, 80}, 
                    "$OutputSize" -> {80, 80}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "bn3b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {80, 80}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 80, 80}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{256, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 256, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "$GroupNumber" -> 1, "$InputSize" -> {80, 80}, 
                    "$OutputSize" -> {80, 80}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "_plus3b2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus3b2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus3b2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus3b2", "Outputs", "Output"]}], "pool3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 256, 
                    "$InputSize" -> {80, 80}, "$OutputSize" -> {40, 40}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 40, 40}, 
                    NeuralNetworks`RealT]]], "4a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{256, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{256, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "$GroupNumber" -> 1, "$InputSize" -> {40, 40}, 
                    "$OutputSize" -> {40, 40}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 256, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 256, 
                    "$GroupNumber" -> 1, "$InputSize" -> {40, 40}, 
                    "$OutputSize" -> {40, 40}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "bn4a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {40, 40}, 
                    "$OutputSize" -> {40, 40}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "_plus4a" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus4a", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus4a", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4a", "Outputs", "Output"]}], "4b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {40, 40}, 
                    "$OutputSize" -> {40, 40}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "bn4b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {40, 40}, 
                    "$OutputSize" -> {40, 40}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "_plus4b1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b1", "Outputs", "Output"]}], "4b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {40, 40}, 
                    "$OutputSize" -> {40, 40}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "bn4b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {40, 40}, 
                    "$OutputSize" -> {40, 40}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "_plus4b2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b2", "Outputs", "Output"]}], "4b3" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b3_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {40, 40}, 
                    "$OutputSize" -> {40, 40}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "bn4b3_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {40, 40}, 
                    "$OutputSize" -> {40, 40}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "_plus4b3" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b3", "Outputs", "Output"]}], "4b4" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b4_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {40, 40}, 
                    "$OutputSize" -> {40, 40}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "bn4b4_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {40, 40}, 
                    "$OutputSize" -> {40, 40}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "_plus4b4" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b4", "Outputs", "Output"]}], "4b5" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b5_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {40, 40}, 
                    "$OutputSize" -> {40, 40}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "bn4b5_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 40, 40}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {40, 40}, 
                    "$OutputSize" -> {40, 40}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "_plus4b5" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b5", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b5", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b5", "Outputs", "Output"]}], "pool4" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 512, 
                    "$InputSize" -> {40, 40}, "$OutputSize" -> {20, 20}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "5a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {20, 20}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 20, 20}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {20, 20}, 
                    "$OutputSize" -> {20, 20}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {20, 20}, 
                    "$OutputSize" -> {20, 20}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "bn5a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {20, 20}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 20, 20}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {20, 20}, 
                    "$OutputSize" -> {20, 20}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]]], "_plus5a" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus5a", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus5a", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus5a", "Outputs", "Output"]}], "5b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5b1_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {20, 20}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 20, 20}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 1024, 
                    "$GroupNumber" -> 1, "$InputSize" -> {20, 20}, 
                    "$OutputSize" -> {20, 20}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "bn5b1_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {20, 20}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 20, 20}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {20, 20}, 
                    "$OutputSize" -> {20, 20}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]]], "_plus5b1" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus5b1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus5b1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus5b1", "Outputs", "Output"]}], "5b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5b2_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {20, 20}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 20, 20}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 1024, 
                    "$GroupNumber" -> 1, "$InputSize" -> {20, 20}, 
                    "$OutputSize" -> {20, 20}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "bn5b2_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {20, 20}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 20, 20}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {20, 20}, 
                    "$OutputSize" -> {20, 20}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]]], "_plus5b2" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus5b2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus5b2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus5b2", "Outputs", "Output"]}], "pool5" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 1024, 
                    "$InputSize" -> {20, 20}, "$OutputSize" -> {10, 10}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]]], "6a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn6a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {10, 10}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]]], "res6a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 10, 10}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]]], "res6a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 1024, 
                    "$GroupNumber" -> 1, "$InputSize" -> {10, 10}, 
                    "$OutputSize" -> {10, 10}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]]], "res6a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{512, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 512, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 1024, 
                    "$GroupNumber" -> 1, "$InputSize" -> {10, 10}, 
                    "$OutputSize" -> {10, 10}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]]], "bn6a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {10, 10}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 10, 10}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 512, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 512, 
                    "$GroupNumber" -> 1, "$InputSize" -> {10, 10}, 
                    "$OutputSize" -> {10, 10}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]]], "bn6a_branch2b2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {10, 10}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 10, 10}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 1024, 
                    "$GroupNumber" -> 1, "$InputSize" -> {10, 10}, 
                    "$OutputSize" -> {10, 10}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]]], "_plus6a" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus6a", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus6a", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus6a", "Outputs", "Output"]}], "7a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 10, 10}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn7a_branch2a" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    2048}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {10, 10}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]]], "res7a_branch2a_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 10, 10}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]]], "res7a_branch1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 4096, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 2048, 
                    "$GroupNumber" -> 1, "$InputSize" -> {10, 10}, 
                    "$OutputSize" -> {10, 10}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 10, 10}, 
                    NeuralNetworks`RealT]]], "res7a_branch2a" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 1024, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 2048, 
                    "$GroupNumber" -> 1, "$InputSize" -> {10, 10}, 
                    "$OutputSize" -> {10, 10}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]]], "bn7a_branch2b1" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    1024}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {10, 10}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b1_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 10, 10}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b1" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048, 1024, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 2048, 
                    "KernelSize" -> {3, 3}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {1, 1}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 1024, 
                    "$GroupNumber" -> 1, "$InputSize" -> {10, 10}, 
                    "$OutputSize" -> {10, 10}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]]], "bn7a_branch2b2" -> 
                    Association["Type" -> "BatchNormalization", "Arrays" -> 
                    Association["Gamma" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], "Beta" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> NeuralNetworks`Private`DummyRawArray[{
                    2048}], "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {10, 10}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2_relu" -> 
                    Association["Type" -> "Elementwise", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 10, 10}], "Inputs" -> 
                    Association["Input" -> 
                    NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2" -> 
                    Association["Type" -> "Convolution", "Arrays" -> 
                    Association["Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096, 2048, 1, 1}], 
                    "Biases" -> None], "Parameters" -> 
                    Association["OutputChannels" -> 4096, 
                    "KernelSize" -> {1, 1}, "Stride" -> {1, 1}, 
                    "PaddingSize" -> {0, 0}, "Dilation" -> {1, 1}, 
                    "Dimensionality" -> 2, "$InputChannels" -> 2048, 
                    "$GroupNumber" -> 1, "$InputSize" -> {10, 10}, 
                    "$OutputSize" -> {10, 10}, "Interleaving" -> False], 
                    "Inputs" -> Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 10, 10}, 
                    NeuralNetworks`RealT]]], "_plus7a" -> 
                    Association["Type" -> "Threading", "Arrays" -> 
                    Association[], "Parameters" -> 
                    Association["Function" -> 
                    NeuralNetworks`ValidatedParameter[Plus]], "Inputs" -> 
                    Association["1" -> 
                    NeuralNetworks`TensorT[{4096, 10, 10}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{4096, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association["Output" -> 
                    NeuralNetworks`TensorT[{4096, 10, 10}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus7a", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus7a", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus7a", "Outputs", "Output"]}], "bn7" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    4096, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 10, 10}, 
                    NeuralNetworks`RealT]]], "relu7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4096, 10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 10, 10}, 
                    NeuralNetworks`RealT]]], "pool7" -> 
                    Association[
                    "Type" -> "Aggregation", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{4096, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4b3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4b4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4b5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool7", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 320, 320}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]]], 
                    "linear" -> 
                    Association[
                    "Type" -> "Linear", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{32, 4096}], 
                    "Biases" -> NeuralNetworks`Private`DummyRawArray[{32}]], 
                    "Parameters" -> 
                    Association[
                    "OutputDimensions" -> {32}, "$OutputSize" -> 32, 
                    "$InputSize" -> 4096, "$InputDimensions" -> {4096}], 
                    "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]], 
                    "softmax" -> 
                    Association[
                    "Type" -> "Softmax", "Arrays" -> Association[], 
                    "Parameters" -> Association["Level" -> -1], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]], 
                    "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "augLayer", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pretrainednet", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "augLayer", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pretrainednet", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "linear", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "softmax", "Outputs", "Output"]}, "Inputs" -> 
                    Association["Input" -> NetEncoder["Image", 
                    Association[
                    "ImageSize" -> {320, 320}, "ColorSpace" -> "RGB", 
                    "ColorChannels" -> 3, 
                    "MeanImage" -> {0.485, 0.456, 0.406}, 
                    "VarianceImage" -> {0.0524, 0.0502, 0.0506}], 
                    
                    NeuralNetworks`TensorT[{3, 320, 320}, 
                    NeuralNetworks`RealT]]], "Outputs" -> 
                    Association["Output" -> NetDecoder["Class", 
                    Association[
                    "Labels" -> {
                    "MIDImale", "MIDIfemale", "RJ45male", "RJ45female", 
                    "TOSLINKmale", "TOSLINKfemale", "compositevideomalecable",
                     "compositevideoport", "componentvideocable", 
                    "componentvideoport", "VGAcable", "VGAport", "dvicable", 
                    "dviport", "minidisplayportcable", "minidisplayportport", 
                    "HDMIcable", "HDMIport", "DisplayPortcable", 
                    "DisplayPortport", "usbamale", "usbafemale", "usbcmale", 
                    "usbcfemale", "microusbfemale", "microusbmalecable", 
                    "firewire800cable", "firewire800port", "firewire400port", 
                    "firewire400cable", "coaxcable", "coaxport"}, 
                    "InputDepth" -> 1, "Dimensions" -> 32, "$Rank" -> 0], 
                    NeuralNetworks`TensorT[{32}, NeuralNetworks`RealT]]]], 
                   NeuralNetworks`Private`NetChain`opart = {
                    "Nodes", "pretrainednet"}, 
                   NeuralNetworks`Private`NetChain`part = {
                    "Nodes", "pretrainednet"}, 
                   NeuralNetworks`Private`NetChain`selected = 
                   Association[
                    "Type" -> "Chain", "Nodes" -> 
                    Association[
                    "conv1a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> 
                    NeuralNetworks`Private`DummyRawArray[{64, 3, 3, 3}], 
                    "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 64, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 3, "$GroupNumber" -> 1, 
                    "$InputSize" -> {320, 320}, "$OutputSize" -> {320, 320}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 320, 320}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 320, 320}, 
                    NeuralNetworks`RealT]]], "pool1" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 64, 
                    "$InputSize" -> {320, 320}, "$OutputSize" -> {160, 160}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 320, 320}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{64, 160, 160}, 
                    NeuralNetworks`RealT]]], "2a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{64, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{64}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{64}]], "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    64, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {160, 160}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {64, 160, 160}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{64, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    64, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {160, 160}, "$OutputSize" -> {160, 160}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    64, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 64, "$GroupNumber" -> 1, 
                    "$InputSize" -> {160, 160}, "$OutputSize" -> {160, 160}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{64, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "bn2a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {160, 160}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 160, 160}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {160, 160}, "$OutputSize" -> {160, 160}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "_plus2a" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus2a", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus2a", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus2a", "Outputs", "Output"]}], "2b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2b1_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {160, 160}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 160, 160}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {160, 160}, "$OutputSize" -> {160, 160}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "bn2b1_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {160, 160}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 160, 160}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2b1_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {160, 160}, "$OutputSize" -> {160, 160}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "_plus2b1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus2b1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus2b1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus2b1", "Outputs", "Output"]}], "2b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn2b2_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {160, 160}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 160, 160}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {160, 160}, "$OutputSize" -> {160, 160}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "bn2b2_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {160, 160}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 160, 160}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "res2b2_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{128, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 128, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {160, 160}, "$OutputSize" -> {160, 160}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]], "_plus2b2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus2b2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus2b2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res2b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn2b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus2b2", "Outputs", "Output"]}], "pool2" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 128, 
                    "$InputSize" -> {160, 160}, "$OutputSize" -> {80, 80}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 160, 160}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{128, 80, 80}, 
                    NeuralNetworks`RealT]]], "3a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{128, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{128}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    128, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {80, 80}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {128, 80, 80}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{128, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    128, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {80, 80}, "$OutputSize" -> {80, 80}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    128, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 128, "$GroupNumber" -> 1, 
                    "$InputSize" -> {80, 80}, "$OutputSize" -> {80, 80}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{128, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "bn3a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {80, 80}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 80, 80}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {80, 80}, "$OutputSize" -> {80, 80}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "_plus3a" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus3a", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus3a", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus3a", "Outputs", "Output"]}], "3b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3b1_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {80, 80}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 80, 80}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {80, 80}, "$OutputSize" -> {80, 80}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "bn3b1_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {80, 80}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 80, 80}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3b1_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {80, 80}, "$OutputSize" -> {80, 80}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "_plus3b1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus3b1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus3b1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus3b1", "Outputs", "Output"]}], "3b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn3b2_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {80, 80}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 80, 80}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {80, 80}, "$OutputSize" -> {80, 80}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "bn3b2_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {80, 80}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 80, 80}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "res3b2_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{256, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 256, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {80, 80}, "$OutputSize" -> {80, 80}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]], "_plus3b2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus3b2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus3b2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res3b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn3b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus3b2", "Outputs", "Output"]}], "pool3" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 256, 
                    "$InputSize" -> {80, 80}, "$OutputSize" -> {40, 40}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 80, 80}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{256, 40, 40}, 
                    NeuralNetworks`RealT]]], "4a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{256, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{256}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    256, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {256, 40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{256, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    256, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {40, 40}, "$OutputSize" -> {40, 40}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    256, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 256, "$GroupNumber" -> 1, 
                    "$InputSize" -> {40, 40}, "$OutputSize" -> {40, 40}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{256, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "bn4a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {40, 40}, "$OutputSize" -> {40, 40}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "_plus4a" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus4a", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus4a", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4a", "Outputs", "Output"]}], "4b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b1_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {40, 40}, "$OutputSize" -> {40, 40}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "bn4b1_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b1_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {40, 40}, "$OutputSize" -> {40, 40}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "_plus4b1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b1", "Outputs", "Output"]}], "4b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b2_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {40, 40}, "$OutputSize" -> {40, 40}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "bn4b2_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b2_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {40, 40}, "$OutputSize" -> {40, 40}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "_plus4b2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b2", "Outputs", "Output"]}], "4b3" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b3_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {40, 40}, "$OutputSize" -> {40, 40}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "bn4b3_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b3_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {40, 40}, "$OutputSize" -> {40, 40}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "_plus4b3" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b3", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b3", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b3_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b3_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b3", "Outputs", "Output"]}], "4b4" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b4_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {40, 40}, "$OutputSize" -> {40, 40}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "bn4b4_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b4_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {40, 40}, "$OutputSize" -> {40, 40}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "_plus4b4" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b4", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b4", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b4_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b4_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b4", "Outputs", "Output"]}], "4b5" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn4b5_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {40, 40}, "$OutputSize" -> {40, 40}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "bn4b5_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 40, 40}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "res4b5_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {40, 40}, "$OutputSize" -> {40, 40}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]], "_plus4b5" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b5", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b5", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res4b5_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn4b5_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus4b5", "Outputs", "Output"]}], "pool4" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 512, 
                    "$InputSize" -> {40, 40}, "$OutputSize" -> {20, 20}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 40, 40}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "5a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {20, 20}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 20, 20}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    512, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {20, 20}, "$OutputSize" -> {20, 20}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {20, 20}, "$OutputSize" -> {20, 20}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "bn5a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {20, 20}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 20, 20}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {20, 20}, "$OutputSize" -> {20, 20}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]]], "_plus5a" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus5a", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus5a", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus5a", "Outputs", "Output"]}], "5b1" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5b1_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {20, 20}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 20, 20}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    1024, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {20, 20}, "$OutputSize" -> {20, 20}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "bn5b1_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {20, 20}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 20, 20}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5b1_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {20, 20}, "$OutputSize" -> {20, 20}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]]], "_plus5b1" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus5b1", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus5b1", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b1_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b1_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus5b1", "Outputs", "Output"]}], "5b2" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn5b2_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {20, 20}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 20, 20}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    1024, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {20, 20}, "$OutputSize" -> {20, 20}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "bn5b2_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {20, 20}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 20, 20}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]]], "res5b2_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {20, 20}, "$OutputSize" -> {20, 20}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]]], "_plus5b2" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus5b2", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus5b2", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res5b2_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn5b2_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus5b2", "Outputs", "Output"]}], "pool5" -> 
                    Association[
                    "Type" -> "Pooling", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "KernelSize" -> {3, 3}, "Stride" -> {2, 2}, 
                    "PaddingSize" -> {1, 1}, "Function" -> Max, 
                    "Dimensionality" -> 2, "$Channels" -> 1024, 
                    "$InputSize" -> {20, 20}, "$OutputSize" -> {10, 10}, 
                    "$MXPoolingConvention" -> "valid", "$MXGlobalPool" -> 
                    False, "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 20, 20}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]]], "6a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn6a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]]], "res6a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]]], "res6a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{2048, 
                    1024, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {10, 10}, "$OutputSize" -> {10, 10}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]]], "res6a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{512, 
                    1024, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 512, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {10, 10}, "$OutputSize" -> {10, 10}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]]], "bn6a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{512}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    512, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {512, 10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    512, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 512, "$GroupNumber" -> 1, 
                    "$InputSize" -> {10, 10}, "$OutputSize" -> {10, 10}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{512, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]]], "bn6a_branch2b2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]]], "res6a_branch2b2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{2048, 
                    1024, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {10, 10}, "$OutputSize" -> {10, 10}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]]], "_plus6a" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus6a", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus6a", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res6a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn6a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus6a", "Outputs", "Output"]}], "7a" -> 
                    Association[
                    "Type" -> "Graph", "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096, 10, 10}, 
                    NeuralNetworks`RealT]], "Nodes" -> 
                    Association[
                    "bn7a_branch2a" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]]], "res7a_branch2a_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]]], "res7a_branch1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{4096, 
                    2048, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 4096, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 2048, "$GroupNumber" -> 1, 
                    "$InputSize" -> {10, 10}, "$OutputSize" -> {10, 10}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 10, 10}, 
                    NeuralNetworks`RealT]]], "res7a_branch2a" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{1024, 
                    2048, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 1024, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 2048, "$GroupNumber" -> 1, 
                    "$InputSize" -> {10, 10}, "$OutputSize" -> {10, 10}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]]], "bn7a_branch2b1" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{1024}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    1024, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b1_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {1024, 10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b1" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{2048, 
                    1024, 3, 3}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 2048, "KernelSize" -> {3, 3}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {1, 1}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 1024, "$GroupNumber" -> 1, 
                    "$InputSize" -> {10, 10}, "$OutputSize" -> {10, 10}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{1024, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]]], "bn7a_branch2b2" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{2048}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    2048, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2_relu" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {2048, 10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]]], "res7a_branch2b2" -> 
                    Association[
                    "Type" -> "Convolution", "Arrays" -> 
                    Association[
                    "Weights" -> NeuralNetworks`Private`DummyRawArray[{4096, 
                    2048, 1, 1}], "Biases" -> None], "Parameters" -> 
                    Association[
                    "OutputChannels" -> 4096, "KernelSize" -> {1, 1}, 
                    "Stride" -> {1, 1}, "PaddingSize" -> {0, 0}, 
                    "Dilation" -> {1, 1}, "Dimensionality" -> 2, 
                    "$InputChannels" -> 2048, "$GroupNumber" -> 1, 
                    "$InputSize" -> {10, 10}, "$OutputSize" -> {10, 10}, 
                    "Interleaving" -> False], "Inputs" -> 
                    Association[
                    "Input" -> NeuralNetworks`TensorT[{2048, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 10, 10}, 
                    NeuralNetworks`RealT]]], "_plus7a" -> 
                    Association[
                    "Type" -> "Threading", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Plus]], 
                    "Inputs" -> Association[
                    "1" -> NeuralNetworks`TensorT[{4096, 10, 10}, 
                    NeuralNetworks`RealT], "2" -> 
                    NeuralNetworks`TensorT[{4096, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> NeuralNetworks`TensorT[{4096, 10, 10}, 
                    NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2_relu", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus7a", "Inputs", "1"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "_plus7a", "Inputs", "2"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "res7a_branch2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7a_branch2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "_plus7a", "Outputs", "Output"]}], "bn7" -> 
                    Association[
                    "Type" -> "BatchNormalization", "Arrays" -> 
                    Association[
                    "Gamma" -> NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "Beta" -> NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingMean" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}], 
                    "MovingVariance" -> 
                    NeuralNetworks`Private`DummyRawArray[{4096}]], 
                    "Parameters" -> 
                    Association[
                    "Momentum" -> 0.9, "Epsilon" -> 0.00001001, "Channels" -> 
                    4096, "Interleaving" -> False, 
                    "$SpatialDimensions" -> {10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096, 10, 10}, 
                    NeuralNetworks`RealT]]], "relu7" -> 
                    Association[
                    "Type" -> "Elementwise", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> NeuralNetworks`ValidatedParameter[Ramp], 
                    "$Dimensions" -> {4096, 10, 10}], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096, 10, 10}, 
                    NeuralNetworks`RealT]]], "pool7" -> 
                    Association[
                    "Type" -> "Aggregation", "Arrays" -> Association[], 
                    "Parameters" -> 
                    Association[
                    "Function" -> Mean, "Levels" -> 
                    NeuralNetworks`ValidatedParameter[
                    Span[2, All]]], "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{4096, 10, 10}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]]]], 
                    "Edges" -> {
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath["Inputs", "Input"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "conv1a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "2b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "2b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "3b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "3b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4b3", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4b4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b3", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "4b5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "4b5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool4", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5b1", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "5b2", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b1", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "5b2", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "6a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool5", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "7a", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "6a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Nodes", "bn7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "7a", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "bn7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool7", "Inputs", "Input"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "relu7", "Outputs", "Output"], 
                    NeuralNetworks`NetPath["Outputs", "Output"] -> 
                    NeuralNetworks`NetPath[
                    "Nodes", "pool7", "Outputs", "Output"]}, "Inputs" -> 
                    Association[
                    "Input" -> 
                    NeuralNetworks`TensorT[{3, 320, 320}, 
                    NeuralNetworks`RealT]], "Outputs" -> 
                    Association[
                    "Output" -> 
                    NeuralNetworks`TensorT[{4096}, NeuralNetworks`RealT]]]}, 
                  DynamicBox[
                   GridBox[{{
                    NeuralNetworks`Private`NetChain`MouseClickBoxes[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Input\"", 
                    Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TagBox[
                    GridBox[{{"\"image\""}, {
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"320\"", "\"320\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    BaselinePosition -> 2, DefaultBaseStyle -> "Column", 
                    GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}], 
                    "Column"], Annotation[#, {"Inputs", "Input"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"augLayer\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "augLayer"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["ImageAugmentationLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "augLayer"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"3-tensor\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"3\"", 
                    "\"320\"", "\"320\""}, "RowWithSeparators"], 
                    "\"\[VeryThinSpace]\"", "\")\""}, "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "augLayer"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"pretrainednet\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pretrainednet"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox[
                    TemplateBox[{"NetChain", "\" \"", 
                    
                    TemplateBox[{"\"(\"", "26", "\" nodes)\""}, "Row", 
                    DisplayFunction -> (RowBox[{
                    TemplateSlotSequence[1, "\[InvisibleSpace]"]}]& ), 
                    InterpretationFunction -> (RowBox[{"Row", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    TemplateSlotSequence[1, ","], "}"}], ",", 
                    RowBox[{"BaseStyle", "\[Rule]", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, DefaultBaseStyle -> 
                    "ColorSwatchGraphics", AspectRatio -> 1, Frame -> True, 
                    FrameStyle -> GrayLevel[0.33333333333333337`], FrameTicks -> 
                    None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    StyleBox[
                    RowBox[{"GrayLevel", "[", "0.5`", "]"}], NumberMarks -> 
                    False]], Appearance -> None, BaseStyle -> {}, 
                    BaselinePosition -> Baseline, DefaultBaseStyle -> {}, 
                    ButtonFunction :> With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {"SelectionDeparture", 
                    "ParentChanged", "EvaluatorQuit"}]]]], BaseStyle -> 
                    Inherited, Evaluator -> Automatic, Method -> 
                    "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> 
                    False]}]}], "]"}]& ), BaseStyle -> GrayLevel[0.5]]}, 
                    "RowDefault"], 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "pretrainednet"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"4096\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "pretrainednet"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"linear\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["LinearLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"32\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "linear"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    StyleBox["\"softmax\"", 
                    GrayLevel[0.5], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    StyleBox["SoftmaxLayer", 
                    GrayLevel[0], StripOnInput -> False], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    TemplateBox[{"\"vector\"", "\" \"", 
                    StyleBox[
                    
                    TemplateBox[{"\"(\"", "\"\[VeryThinSpace]\"", "\"size\"", 
                    "\":\"", "\" \"", 
                    
                    TemplateBox[{"\[Times]", "\"\[Times]\"", "\"32\""}, 
                    "RowWithSeparators"], "\"\[VeryThinSpace]\"", "\")\""}, 
                    "RowDefault"], 
                    GrayLevel[0.5], StripOnInput -> False]}, "RowDefault"], 
                    Annotation[#, {"Nodes", "softmax"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}, {
                    TagBox[
                    TagBox[
                    "\"\"", Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"Output\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]], 
                    TagBox[
                    TagBox[
                    "\"class\"", 
                    Annotation[#, {"Outputs", "Output"}, "Mouse"]& ], 
                    MouseAppearanceTag["LinkHand"]]}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1.1}}}], "Grid"], 
                    If[
                    ListQ[
                    NeuralNetworks`Private`NetChain`part = MouseAnnotation[]],
                     If[NeuralNetworks`Private`NetChain`opart === 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`NetChain`selected = Null; 
                    NeuralNetworks`Private`NetChain`opart = Null, 
                    NeuralNetworks`Private`NetChain`selected = 
                    Part[NeuralNetworks`Private`NetChain`assoc3, 
                    Apply[Sequence, NeuralNetworks`Private`NetChain`part]]; 
                    NeuralNetworks`Private`NetChain`opart = 
                    NeuralNetworks`Private`NetChain`part; Null]; Null]]}, 
                    NeuralNetworks`Private`NetChain`fmtSelected[
                    NeuralNetworks`Private`NetChain`selected, 
                    NeuralNetworks`Private`NetChain`part, 
                    NeuralNetworks`Private`GetSharedArrays[
                    NeuralNetworks`Private`NetChain`assoc3]]}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}}, 
                    GridBoxAlignment -> {"Columns" -> {{Left}}}, 
                    GridFrameMargins -> {{0, 0}, {0, 0}}], 
                   ImageSizeCache -> {343., {269.4169921875, 274.5830078125}},
                    TrackedSymbols :> {
                    NeuralNetworks`Private`NetChain`selected}], 
                  Initialization :> {NetChain}]}}, BaselinePosition -> 
               Automatic, 
               GridBoxAlignment -> {
                "Columns" -> {{Left}}, "Rows" -> {{Automatic}}}, 
               GridBoxItemSize -> {
                "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
               GridBoxSpacings -> {
                "Columns" -> {{2}}, "Rows" -> {{Automatic}}}]}}, 
            BaselinePosition -> {1, 1}, 
            GridBoxAlignment -> {"Rows" -> {{Top}}}, 
            GridBoxItemSize -> {
             "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
            GridBoxSpacings -> {"Columns" -> {
                Offset[0.], {
                 Offset[0.5599999999999999]}, 
                Offset[0.]}, "ColumnsIndexed" -> {}, "Rows" -> {
                Offset[0.], {
                 Offset[0.4]}, 
                Offset[0.]}, "RowsIndexed" -> {}}]}, 
         Dynamic[Typeset`open], ImageSize -> Automatic], 
        BaseStyle -> {
         ShowStringCharacters -> False, NumberMarks -> False, PrintPrecision -> 
          3, ShowSyntaxStyles -> False}, BaselinePosition -> Baseline]], 
      StyleBox["]", "NonInterpretableSummary"]}]},
   "CopyTag",
   DisplayFunction->(#& ),
   InterpretationFunction->("NetChain[<>]"& )],
  False,
  Editable->False,
  SelectWithContents->True,
  Selectable->False]], "Output",
 CellChangeTimes->{3.740415102378778*^9},
 CellLabel->"Out[57]=",ExpressionUUID->"8c715870-d395-4e6f-99ea-cb9a09e15c69"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"net4", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<Neural Networks/\>\"", ",", "\"\<trainedresNetv2.wlnet\>\""}], 
     "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740218506593638*^9, 3.740218516557942*^9}, 
   3.740340240944405*^9, 3.740342065499926*^9, 3.740408117787106*^9},
 CellLabel->"In[26]:=",ExpressionUUID->"a0c5b236-24a0-450a-be7d-0a118e3964ec"],

Cell[BoxData[
 RowBox[{
  RowBox[{"net5", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<Neural Networks/\>\"", ",", "\"\<trainedvgg19Netv2.wlnet\>\""}], 
     "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740218521659162*^9, 3.7402185712982197`*^9}, 
   3.7402187099028873`*^9, 3.7403402453911667`*^9, 3.740408118616078*^9},
 CellLabel->"In[27]:=",ExpressionUUID->"07c78902-0e8a-4d4a-9616-d13089833318"],

Cell[BoxData[
 RowBox[{
  RowBox[{"net6", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<Neural Networks/\>\"", ",", 
      "\"\<trainedimageidentifyNet.wlnet\>\""}], "]"}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.7402190912132463`*^9, 3.74021910541308*^9}, 
   3.740340198926339*^9, 3.740340248205846*^9, 3.7404081193447933`*^9},
 CellLabel->"In[28]:=",ExpressionUUID->"a4e4a28f-7935-44d5-8514-d56a1994a113"],

Cell[BoxData[
 RowBox[{
  RowBox[{"net7", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<Neural Networks/\>\"", ",", "\"\<trainedademNet.wlnet\>\""}], 
     "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740231586294536*^9, 3.7402315914714613`*^9}, 
   3.740340251241699*^9, 3.740408120233685*^9},
 CellLabel->"In[29]:=",ExpressionUUID->"73fc54fe-606a-4bd4-b73d-30d2c47650f0"],

Cell[BoxData[
 RowBox[{
  RowBox[{"net8", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<Neural Networks/\>\"", ",", "\"\<trainedresNet.wlnet\>\""}], "]"}],
     "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740236314710516*^9, 3.740236324817707*^9}, 
   3.740340261138708*^9, 3.740408121251384*^9},
 CellLabel->"In[30]:=",ExpressionUUID->"b94a4639-4318-4df8-b2b4-e2c5cc792b09"],

Cell[BoxData[
 RowBox[{
  RowBox[{"net9", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<Neural Networks/\>\"", ",", "\"\<trainedinceptionNet.wlnet\>\""}], 
     "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740244787930048*^9, 3.7402447933820877`*^9}, 
   3.7403402648834867`*^9, 3.7404081227523003`*^9},
 CellLabel->"In[31]:=",ExpressionUUID->"ec2db832-c252-48d0-af49-988b322881da"],

Cell[BoxData[
 RowBox[{
  RowBox[{"net10", " ", "=", " ", 
   RowBox[{"Import", "[", 
    RowBox[{"StringJoin", "[", 
     RowBox[{
      RowBox[{"NotebookDirectory", "[", "]"}], ",", 
      "\"\<Neural Networks/\>\"", ",", "\"\<trainedvgg19Net.wlnet\>\""}], 
     "]"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.740244866884543*^9, 3.740244873577829*^9}, 
   3.740340268606181*^9, 3.74040812359303*^9},
 CellLabel->"In[32]:=",ExpressionUUID->"32543484-2909-413d-bf9e-1cc6b7082e96"],

Cell[BoxData[
 RowBox[{"<<", "HTTPHandling`"}]], "Input",
 CellLabel->"In[36]:=",ExpressionUUID->"93d9ed71-ae55-4bc3-a058-c2c8f9c6516d"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"StartWebServer", "@", 
   RowBox[{"FormPage", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{
       RowBox[{"\"\<Upload\>\"", "\[Rule]", 
        RowBox[{"\"\<Image\>\"", "\[Rule]", "\"\<\>\""}]}], ",", 
       RowBox[{"\"\<Network\>\"", "\[Rule]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"\"\<Ademxapp v2\>\"", "\[Rule]", "1"}], ",", 
          RowBox[{"\"\<Inception V3 v2\>\"", "\[Rule]", "2"}], ",", 
          RowBox[{"\"\<ResNet-152 v2\>\"", "\[Rule]", "3"}], ",", 
          RowBox[{"\"\<ImageIdentify v2\>\"", "\[Rule]", "4"}], ",", 
          RowBox[{"\"\<ResNet-152 v1\>\"", "\[Rule]", "5"}], ",", 
          RowBox[{"\"\<ImageIdentify v1\>\"", "\[Rule]", "6"}], ",", 
          RowBox[{"\"\<Inception v1\>\"", "\[Rule]", "7"}], ",", 
          RowBox[{"\"\<Ademxapp v1\>\"", "\[Rule]", "8"}], ",", 
          RowBox[{"\"\<VGG-19 v1\>\"", "\[Rule]", "9"}], ",", 
          RowBox[{"\"\<VGG-19 v2\>\"", "\[Rule]", "10"}]}], "}"}]}]}], "}"}], 
     ",", 
     RowBox[{
      RowBox[{"(", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"nets", "=", " ", 
         RowBox[{"{", 
          RowBox[{
          "net3", ",", "net2", ",", "net4", ",", "net1", ",", "net8", ",", 
           "net6", ",", "net9", ",", "net7", ",", "net10", ",", "net5"}], 
          "}"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"network", " ", "=", " ", 
         RowBox[{"nets", "[", 
          RowBox[{"[", "#Network", "]"}], "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"img", " ", "=", " ", 
         RowBox[{"CurrentImage", "[", "]"}]}], ";", "\[IndentingNewLine]", 
        RowBox[{"If", " ", "[", 
         RowBox[{
          RowBox[{"#Upload", "=!=", "\"\<\>\""}], ",", 
          RowBox[{"result", "=", 
           RowBox[{"network", "[", 
            RowBox[{"[", "#Upload", "]"}], "]"}]}], ",", 
          RowBox[{"result", "=", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{"network", "[", "img", "]"}], ",", "img"}], "}"}]}]}], 
         "]"}], ";", "\[IndentingNewLine]", 
        RowBox[{"Style", "[", 
         RowBox[{"result", ",", "\"\<Title\>\""}], "]"}]}], ")"}], "&"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"AppearanceRules", "\[Rule]", 
      RowBox[{"<|", 
       RowBox[{
        RowBox[{
        "\"\<Title\>\"", "\[Rule]", "\"\<Identify Plugs and Connectors\>\""}],
         ",", 
        RowBox[{
        "\"\<Description\>\"", "\[Rule]", 
         "\"\<This is an implementation of various Neural Networks which can \
identify Plugs and Connectors\>\""}]}], "|>"}]}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.7404082978677473`*^9, 3.7404083223918133`*^9}, {
  3.740408393485553*^9, 3.740408405857463*^9}, {3.7404089518316097`*^9, 
  3.7404090005320873`*^9}, {3.74040910404298*^9, 3.7404093961516047`*^9}, {
  3.7404094485205507`*^9, 3.740409486132146*^9}, {3.740409546564013*^9, 
  3.740409551328206*^9}, {3.740409604082045*^9, 3.740409648124621*^9}, {
  3.740410106324088*^9, 3.740410172297612*^9}, {3.740410222602272*^9, 
  3.7404102424939823`*^9}, {3.7404102920026693`*^9, 3.740410293154562*^9}, {
  3.7404103846174603`*^9, 3.7404104191152143`*^9}},
 CellLabel->"In[56]:=",ExpressionUUID->"fa5b806d-528b-4800-ae2a-351b693deec6"],

Cell[BoxData[
 TemplateBox[{
  "WebServer","running",
   "\"A server is already running on port \\!\\(\\*RowBox[{\\\"7000\\\"}]\\).\
\"",2,56,63,18659901709239748124,"Local","HTTPHandling`WebServer"},
  "MessageTemplate2"]], "Message", "MSG",
 CellChangeTimes->{3.7404104197954493`*^9},
 CellLabel->
  "During evaluation of \
In[56]:=",ExpressionUUID->"3cc5881e-3f78-44d4-8a5c-95d5cdd83c7c"]
}, Open  ]]
},
WindowSize->{808, 837},
WindowMargins->{{175, Automatic}, {Automatic, 17}},
FrontEndVersion->"11.3 for Mac OS X x86 (32-bit, 64-bit Kernel) (March 5, \
2018)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 657, 14, 52, "Input",ExpressionUUID->"3bddd08f-d8e3-47fb-9de7-9ef822f5fff5"],
Cell[1218, 36, 575, 13, 52, "Input",ExpressionUUID->"c8aa61c2-ea39-44d2-822d-ecfe7e53aa9d"],
Cell[CellGroupData[{
Cell[1818, 53, 490, 9, 52, "Input",ExpressionUUID->"bd3016dc-ee64-4c02-b5fa-cbc0dba5a722"],
Cell[2311, 64, 376225, 6693, 583, "Output",ExpressionUUID->"8c715870-d395-4e6f-99ea-cb9a09e15c69"]
}, Open  ]],
Cell[378551, 6760, 511, 11, 52, "Input",ExpressionUUID->"a0c5b236-24a0-450a-be7d-0a118e3964ec"],
Cell[379065, 6773, 519, 11, 52, "Input",ExpressionUUID->"07c78902-0e8a-4d4a-9616-d13089833318"],
Cell[379587, 6786, 526, 12, 52, "Input",ExpressionUUID->"a4e4a28f-7935-44d5-8514-d56a1994a113"],
Cell[380116, 6800, 490, 11, 52, "Input",ExpressionUUID->"73fc54fe-606a-4bd4-b73d-30d2c47650f0"],
Cell[380609, 6813, 486, 11, 30, "Input",ExpressionUUID->"b94a4639-4318-4df8-b2b4-e2c5cc792b09"],
Cell[381098, 6826, 499, 11, 52, "Input",ExpressionUUID->"ec2db832-c252-48d0-af49-988b322881da"],
Cell[381600, 6839, 489, 11, 52, "Input",ExpressionUUID->"32543484-2909-413d-bf9e-1cc6b7082e96"],
Cell[382092, 6852, 136, 2, 30, "Input",ExpressionUUID->"93d9ed71-ae55-4bc3-a058-c2c8f9c6516d"],
Cell[CellGroupData[{
Cell[382253, 6858, 3271, 69, 325, "Input",ExpressionUUID->"fa5b806d-528b-4800-ae2a-351b693deec6"],
Cell[385527, 6929, 391, 9, 24, "Message",ExpressionUUID->"3cc5881e-3f78-44d4-8a5c-95d5cdd83c7c"]
}, Open  ]]
}
]
*)

